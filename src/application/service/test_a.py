# Generated by librat cli 1.0.0

from injector import inject

from src.application.schema.test_a.create import test_aCreateSchema
from src.application.schema.test_a.display import test_aDisplaySchema
from src.application.schema.test_a.short import test_aShortSchema
from src.application.service.base import AppService
from src.domain.model.coin import test_a
from src.domain.repository.coin import test_aRepository
from src.infrastructure.logger.app_logger import AppLogger


class test_aService(AppService[test_a, test_aCreateSchema, test_aDisplaySchema, test_aShortSchema]):
    logger: AppLogger
    repository: test_aRepository

    @inject
    def __init__(self, logger: AppLogger, repository: test_aRepository):
        super().__init__(logger, repository=repository)

    def _from_create(self, entity: test_aCreateSchema) -> test_a:
        return test_a(**entity.model_dump())